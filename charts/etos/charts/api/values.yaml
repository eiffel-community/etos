# Default values for api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: registry.nordix.org/eiffel/etos-api
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  # Defaults to create.false due to the main `etos` chart creating it.
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "etos-sa"

# This must be the same as the etos chart, as suite starter does not generate
# its own configmap in this chart. Yet.
configMap: "etos"

# Filebeat is for sending logs to an elastic cluster. It is used to debug
# messages and to follow a test suite throughout an ETOS execution.
filebeat:
  enabled: false
  image: "docker.elastic.co/beats/filebeat:7.10.1"
  config:
    filebeat.yml: |-
      filebeat.inputs:
      - type: log
        paths:
          /usr/share/filebeat/logs/*
      processors:
        - add_host_metadata:
      output.logstash:
        hosts: ["logstash-logstash.elasticsearch.svc.cluster.local:5044"]configMap: "etos"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  name: api
  port: 80

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
