---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: providers.etos.eiffel-community.github.io
spec:
  group: etos.eiffel-community.github.io
  names:
    kind: Provider
    listKind: ProviderList
    plural: providers
    singular: provider
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Available")].status
      name: Available
      type: string
    - jsonPath: .status.conditions[?(@.type=="Available")].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=="Available")].message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Provider is the Schema for the providers API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ProviderSpec defines the desired state of Provider
            properties:
              healthCheck:
                default: {}
                description: |-
                  Healthcheck defines the health check endpoint and interval for providers.
                  The defaults of this should work most of the time.
                properties:
                  endpoint:
                    default: /v1alpha1/selftest/ping
                    type: string
                  intervalSeconds:
                    default: 30
                    type: integer
                type: object
              host:
                type: string
              jsontas:
                description: |-
                  These are pointers so that they become nil in the Provider object in Kubernetes
                  and don't muddle up the yaml with empty data.
                properties:
                  execution_space:
                    description: JSONTasExecutionSpace is the execution space provider
                      definition for the JSONTas provider
                    properties:
                      checkin:
                        x-kubernetes-preserve-unknown-fields: true
                      checkout:
                        x-kubernetes-preserve-unknown-fields: true
                      id:
                        type: string
                      list:
                        description: JSONTasList is the List command in the JSONTas
                          provider.
                        properties:
                          available:
                            x-kubernetes-preserve-unknown-fields: true
                          possible:
                            x-kubernetes-preserve-unknown-fields: true
                        required:
                        - available
                        - possible
                        type: object
                    required:
                    - id
                    - list
                    type: object
                  image:
                    type: string
                  iut:
                    description: |-
                      These are pointers so that they become nil in the Provider object in Kubernetes
                      and don't muddle up the yaml with empty data.
                    properties:
                      checkin:
                        x-kubernetes-preserve-unknown-fields: true
                      checkout:
                        x-kubernetes-preserve-unknown-fields: true
                      id:
                        type: string
                      list:
                        description: JSONTasList is the List command in the JSONTas
                          provider.
                        properties:
                          available:
                            x-kubernetes-preserve-unknown-fields: true
                          possible:
                            x-kubernetes-preserve-unknown-fields: true
                        required:
                        - available
                        - possible
                        type: object
                      prepare:
                        description: JSONTasIUTPrepare defines the preparation required
                          for an IUT.
                        properties:
                          stages:
                            description: JSONTasIUTPrepareaStages defines the preparation
                              stages required for an IUT.
                            properties:
                              environment_provider:
                                description: Underscore used in these due to backwards
                                  compatibility
                                properties:
                                  steps:
                                    default: {}
                                    x-kubernetes-preserve-unknown-fields: true
                                type: object
                              suite_runner:
                                description: Stage is the definition of a stage where
                                  to execute steps.
                                properties:
                                  steps:
                                    default: {}
                                    x-kubernetes-preserve-unknown-fields: true
                                type: object
                              test_runner:
                                description: Stage is the definition of a stage where
                                  to execute steps.
                                properties:
                                  steps:
                                    default: {}
                                    x-kubernetes-preserve-unknown-fields: true
                                type: object
                            required:
                            - environment_provider
                            - suite_runner
                            - test_runner
                            type: object
                        required:
                        - stages
                        type: object
                    required:
                    - id
                    - list
                    type: object
                  log:
                    description: JSONTasLogArea is the log area provider definition
                      for the JSONTas provider
                    properties:
                      checkin:
                        x-kubernetes-preserve-unknown-fields: true
                      checkout:
                        x-kubernetes-preserve-unknown-fields: true
                      id:
                        type: string
                      list:
                        description: JSONTasList is the List command in the JSONTas
                          provider.
                        properties:
                          available:
                            x-kubernetes-preserve-unknown-fields: true
                          possible:
                            x-kubernetes-preserve-unknown-fields: true
                        required:
                        - available
                        - possible
                        type: object
                    required:
                    - id
                    - list
                    type: object
                type: object
              jsontasSource:
                description: VarSource describes a value from either a secretmap or
                  configmap.
                properties:
                  configMapKeyRef:
                    description: Selects a key from a ConfigMap.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          TODO: Add other useful fields. apiVersion, kind, uid?
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                        type: string
                      optional:
                        description: Specify whether the ConfigMap or its key must
                          be defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  secretKeyRef:
                    description: SecretKeySelector selects a key of a Secret.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          TODO: Add other useful fields. apiVersion, kind, uid?
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              type:
                enum:
                - execution-space
                - iut
                - log-area
                type: string
            required:
            - type
            type: object
          status:
            description: ProviderStatus defines the observed state of Provider
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
