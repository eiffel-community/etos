---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: testruns.etos.eiffel-community.github.io
spec:
  group: etos.eiffel-community.github.io
  names:
    kind: TestRun
    listKind: TestRunList
    plural: testruns
    singular: testrun
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.conditions[?(@.type=="Environment")].reason
      name: Environment
      type: string
    - jsonPath: .status.conditions[?(@.type=="SuiteRunner")].reason
      name: Suiterunner
      type: string
    - jsonPath: .status.conditions[?(@.type=="Active")].status
      name: Active
      type: string
    - jsonPath: .status.conditions[?(@.type=="Active")].message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TestRun is the Schema for the testruns API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TestRunSpec defines the desired state of TestRun
            properties:
              artifact:
                description: Artifact is the ID of the software under test.
                pattern: '[a-f0-9]{8}-?[a-f0-9]{4}-?4[a-f0-9]{3}-?[89ab][a-f0-9]{3}-?[a-f0-9]{12}'
                type: string
              cluster:
                description: Name of the ETOS cluster to execute the testrun in.
                type: string
              environmentProvider:
                properties:
                  image:
                    type: string
                  imagePullPolicy:
                    default: IfNotPresent
                    description: PullPolicy describes a policy for if/when to pull
                      a container image
                    type: string
                required:
                - image
                type: object
              id:
                description: ID is the test suite ID for this execution. Will be generated
                  if nil
                pattern: '[a-f0-9]{8}-?[a-f0-9]{4}-?4[a-f0-9]{3}-?[89ab][a-f0-9]{3}-?[a-f0-9]{12}'
                type: string
              identity:
                type: string
              logListener:
                properties:
                  image:
                    type: string
                  imagePullPolicy:
                    default: IfNotPresent
                    description: PullPolicy describes a policy for if/when to pull
                      a container image
                    type: string
                required:
                - image
                type: object
              providers:
                description: |-
                  Providers to use for test execution. These names must correspond to existing
                  Provider kinds in the namespace where a testrun is created.
                properties:
                  executionSpace:
                    type: string
                  iut:
                    type: string
                  logArea:
                    type: string
                required:
                - executionSpace
                - iut
                - logArea
                type: object
              suiteRunner:
                properties:
                  image:
                    type: string
                  imagePullPolicy:
                    default: IfNotPresent
                    description: PullPolicy describes a policy for if/when to pull
                      a container image
                    type: string
                required:
                - image
                type: object
              suiteSource:
                type: string
              suites:
                items:
                  description: Suite to execute.
                  properties:
                    dataset:
                      description: Dataset for this suite.
                      x-kubernetes-preserve-unknown-fields: true
                    name:
                      description: Name of the test suite.
                      type: string
                    priority:
                      default: 1
                      description: Priority to execute the test suite.
                      type: integer
                    tests:
                      description: Tests to execute as part of this testrun.
                      items:
                        properties:
                          environment:
                            description: TestEnvironment to run tests within.
                            type: object
                          execution:
                            description: Execution describes hot to execute a testCase.
                            properties:
                              checkout:
                                items:
                                  type: string
                                type: array
                              command:
                                type: string
                              environment:
                                additionalProperties:
                                  type: string
                                type: object
                              execute:
                                items:
                                  type: string
                                type: array
                              parameters:
                                additionalProperties:
                                  type: string
                                type: object
                              testRunner:
                                type: string
                            required:
                            - checkout
                            - command
                            - environment
                            - parameters
                            - testRunner
                            type: object
                          id:
                            type: string
                          testCase:
                            description: TestCase metadata.
                            properties:
                              id:
                                type: string
                              tracker:
                                type: string
                              uri:
                                type: string
                              version:
                                type: string
                            required:
                            - id
                            type: object
                        required:
                        - environment
                        - execution
                        - id
                        - testCase
                        type: object
                      type: array
                  required:
                  - dataset
                  - name
                  - priority
                  - tests
                  type: object
                type: array
            required:
            - artifact
            - cluster
            - environmentProvider
            - identity
            - logListener
            - providers
            - suiteRunner
            - suiteSource
            - suites
            type: object
          status:
            description: TestRunStatus defines the observed state of TestRun
            properties:
              completionTime:
                format: date-time
                type: string
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              startTime:
                format: date-time
                type: string
              suiteRunners:
                items:
                  description: |-
                    ObjectReference contains enough information to let you inspect or modify the referred object.
                    ---
                    New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.
                     1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.
                     2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular
                        restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted".
                        Those cannot be well described when embedded.
                     3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.
                     4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity
                        during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple
                        and the version of the actual struct is irrelevant.
                     5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type
                        will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.


                    Instead of using this type, create a locally provided and used type that is well-focused on your reference.
                    For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                        TODO: this design is not final and this field is subject to change in the future.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
